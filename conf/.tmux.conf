# remap prefix to Ctrl + a
set -g prefix C-a
unbind C-b
bind C-a send-prefix

#reload
unbind r
bind r source-file ~/.tmux.conf \; display "tmux.conf reloaded!"

# use 256 colour term
set -g default-terminal "screen-256color" 

# set history scrollback to 10_000
set -g history-limit 10000

# enable the mouse
set -g mouse on

# change index to 1 for windows and panes
set -g base-index 1

## left side content (ex. [mycurrentsession] @mymachine )
set -g status-left "[#S] @#H"
set -g status-left-length 80

## right side content (ex. 15:34 - Fri 28)
set -g status-right "%R - %A %e  "

## center windows list
set -g status-justify centre

## refresh rate
set -g status-interval 60

## monitor activity ON
set-window-option -g monitor-activity on
set -g visual-activity on

## display messages for a second
set -g display-time 1000

## Paste
bind p pasteb

unbind |
unbind -
bind | split-window -h
bind - split-window -v

# '@pane-is-vim' is a pane-local option that is set by the plugin on load,
# and unset when Neovim exits or suspends; note that this means you'll probably
# not want to lazy-load smart-splits.nvim, as the variable won't be set until
# the plugin is loaded

# Smart pane switching with awareness of Neovim splits.
bind-key -n C-Left if -F "#{@pane-is-vim}" 'send-keys C-Left'  'select-pane -L'
bind-key -n C-Down if -F "#{@pane-is-vim}" 'send-keys C-Down'  'select-pane -D'
bind-key -n C-Up if -F "#{@pane-is-vim}" 'send-keys C-Up'  'select-pane -U'
bind-key -n C-Right if -F "#{@pane-is-vim}" 'send-keys C-Right'  'select-pane -R'

# Smart pane resizing with awareness of Neovim splits.
bind-key -n M-Left if -F "#{@pane-is-vim}" 'send-keys M-Left' 'resize-pane -L 3'
bind-key -n M-Down if -F "#{@pane-is-vim}" 'send-keys M-Down' 'resize-pane -D 3'
bind-key -n M-Up if -F "#{@pane-is-vim}" 'send-keys M-Up' 'resize-pane -U 3'
bind-key -n M-Right if -F "#{@pane-is-vim}" 'send-keys M-Right' 'resize-pane -R 3'

